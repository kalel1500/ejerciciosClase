/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package n37_animal;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Usuario
 */
public class VistaAnimal extends javax.swing.JFrame {
    
    ArrayList <Animal> listaAnimales = new ArrayList <Animal>();
    
    // pone los campos a vacio
    private void refrescar() {
        this.JT_nombre.setText("");
        this.JT_edad.setText("");
    }
    
    // lee del fichero de texto ficheroEscirbirAnimal.txt
    private void leerDatos() {
        try {
            // indico donde esta el fichero (ruta) (2ª lin)
            // Pasar los datos a un buffer para leerlo desde la memoria ram (2ª lin)
            FileReader fichero = new FileReader("C:\\Users\\Usuario\\Desktop\\ADRIAN\\INFORMATICA\\DAW2\\SerjioJava\\ficheroEscribirAnimal.txt");
            BufferedReader datos = new BufferedReader(fichero);
            
            String linea = datos.readLine();
            while(linea != null) {
                Animal miAnimal = new Animal();
                String fila[] = linea.split(":");
                miAnimal.setNombre(fila[0]);
                miAnimal.setEdad(Integer.valueOf(fila[1]));
                listaAnimales.add(miAnimal);
                linea = datos.readLine();
            }
            //this.TextArea.setText(texto);
            datos.close();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,ex);
        }
    }
    
    // guarda los datos introducidos en el array
    private void guardarArray() {
        // declarar el objeto animal
        Animal animal = new Animal();
        // coger el texto que hay en JT_nombre y ponerselo al objeto animal en su atributo nombre
        animal.setNombre(JT_nombre.getText());
        try {
            // coger el texto que hay en JT_edad y pararlo a integer
            int edad = Integer.valueOf(JT_edad.getText());
            // una vez pasado a integer poner el valor en el atributo del objeto animal
            animal.setEdad(edad);
            this.listaAnimales.add(animal);
            //JOptionPane.showMessageDialog(null,"Animal añadido con exito");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Error al añadir animal");
        }
    }
    
    // Escribe en el fichero de texto ficheroEscirbirAnimal.txt
    private void escribirDatos() {
        try {
            FileWriter ficheroEscribir = new FileWriter("C:\\Users\\Usuario\\Desktop\\ADRIAN\\INFORMATICA\\DAW2\\SerjioJava\\ficheroEscribirAnimal.txt");
            BufferedWriter datosEscribir = new BufferedWriter(ficheroEscribir);
            // recorrer ArrayList
            // escribir en fichero
            for(Animal miAnimal:listaAnimales) {
                datosEscribir.write(miAnimal.toString());
                datosEscribir.newLine();
            }
            datosEscribir.close();
            //JOptionPane.showMessageDialog(null,"Guardado correctamente");
        } catch (IOException ex) {
            //JOptionPane.showMessageDialog(null,ex);
            JOptionPane.showMessageDialog(null,"Error al guardar");
        }
    }
    
    // recorre el array y escirbe los datos en el TextArea
    private void escribirJTextArea() {
        String texto = "";
        for(Animal miAnimal:listaAnimales) {
            //texto = texto + miAnimal.toString() + "\n";
            texto = texto + "Nombre: " + miAnimal.getNombre() + "\n" + "Edad: " + miAnimal.getEdad() + "\n \n";
        }
        this.TextArea.setText(texto);
    }
    
    // refrescar el TextArea
    private void refrescarJTextArea() {
        this.TextArea.setText("");
    }
    
    
    /**
     * Creates new form Animal
     */
    public VistaAnimal() {
        initComponents();
        leerDatos();
        escribirJTextArea();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        JT_nombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        JT_edad = new javax.swing.JTextField();
        JB_array = new javax.swing.JButton();
        JB_fichero = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextArea = new javax.swing.JTextArea();
        JB_guardarGeneral = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nombre:");

        jLabel2.setText("Edad");

        JT_edad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JT_edadActionPerformed(evt);
            }
        });

        JB_array.setText("Guardar en ArrayList");
        JB_array.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JB_arrayActionPerformed(evt);
            }
        });

        JB_fichero.setText("Guardar en fichero");
        JB_fichero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JB_ficheroActionPerformed(evt);
            }
        });

        TextArea.setColumns(20);
        TextArea.setRows(5);
        jScrollPane1.setViewportView(TextArea);

        JB_guardarGeneral.setText("Guardar general");
        JB_guardarGeneral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JB_guardarGeneralActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(55, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(JT_edad, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                            .addComponent(JT_nombre))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(JB_array)
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(JB_fichero)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(JB_guardarGeneral)
                        .addGap(37, 37, 37))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(JT_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JB_array))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(JT_edad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(JB_fichero))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(JB_guardarGeneral)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JT_edadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JT_edadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JT_edadActionPerformed

    private void JB_ficheroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JB_ficheroActionPerformed
        escribirDatos();
        escribirJTextArea();
    }//GEN-LAST:event_JB_ficheroActionPerformed

    private void JB_arrayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JB_arrayActionPerformed
        guardarArray();
        refrescar();
    }//GEN-LAST:event_JB_arrayActionPerformed

    private void JB_guardarGeneralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JB_guardarGeneralActionPerformed
        guardarArray();
        refrescar();
        escribirDatos();
        escribirJTextArea();
    }//GEN-LAST:event_JB_guardarGeneralActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaAnimal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaAnimal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaAnimal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaAnimal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaAnimal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JB_array;
    private javax.swing.JToggleButton JB_fichero;
    private javax.swing.JButton JB_guardarGeneral;
    private javax.swing.JTextField JT_edad;
    private javax.swing.JTextField JT_nombre;
    private javax.swing.JTextArea TextArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
